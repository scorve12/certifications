//vs코드 설정파일 입니다.
{
    "code-runner.clearPreviousOutput": true, // 이전 출력결과를 지웁니다. false로 설정하면 이전 출력결과를 지우지 않습니다.
    "code-runner.runInTerminal": true, // 터미널에서 실행합니다. false로 설정하면 출력창(OUTPUT)에서 실행합니다.
    "code-runner.preserveFocus": false, // 터미널에서 실행한 후 포커스를 유지합니다. true로 설정하면 포커스를 유지합니다.
    "code-runner.ignoreSelection": true, // 선택된 코드가 없을 때에도 실행합니다. false로 설정하면 선택된 코드가 없을 때에는 실행하지 않습니다.
    "code-runner.saveFileBeforeRun": true, // 파일을 저장한 후 실행합니다. false로 설정하면 저장하지 않고 실행합니다.
    "code-runner.showExecutionMessage": false, // 실행 후 메시지를 표시합니다. true로 설정하면 메시지를 표시합니다.

    
    // Windows 설정
    "code-runner.executorMapByGlob": {
        "$isWindows": {
            "javascript": "cd /d %dir% && echo ==========code start========== && node %fileName% && echo ==========code end==========",
            "typescript": "cd /d %dir% && echo ==========code start========== && tsc %fileName% && node %fileNameWithoutExt%.js && echo ==========code end========== && del %fileNameWithoutExt%.js",
            "java": "cd /d %dir% && echo ==========code start========== && javac %fileName% && java %fileNameWithoutExt% && echo ==========code end========== && del *.class",
            "c": "cd /d %dir% && echo ==========code start========== && gcc %fileName% -o %fileNameWithoutExt%.exe && %fileNameWithoutExt%.exe && echo ==========code end========== && del %fileNameWithoutExt%.exe",
            "cpp": "cd /d %dir% && echo ==========code start========== && g++ %fileName% -o %fileNameWithoutExt%.exe && %fileNameWithoutExt%.exe && echo ==========code end========== && del %fileNameWithoutExt%.exe",
            "python": "echo ==========code start========== && python -u %file% && echo ==========code end==========",
            "ruby": "echo ==========code start========== && ruby %file% && echo ==========code end==========",
            "go": "echo ==========code start========== && go run %file% && echo ==========code end=========="
        }
    },
    
    // Mac/Linux 설정 (기본값)
    "code-runner.executorMap": {
        "javascript": "cd \"$dir\" && echo '\n==========code start==========\n' && node \"$fileName\" && echo '\n==========code end=========='",
        "typescript": "cd \"$dir\" && echo '\n==========code start==========\n' && tsc \"$fileName\" && node \"$fileNameWithoutExt.js\" && echo '\n==========code end==========' && rm -f \"$dir$fileNameWithoutExt.js\"",
        "java": "cd \"$dir\" && echo '\n==========code start==========\n' && javac \"$fileName\" && java \"$fileNameWithoutExt\" && echo '\n==========code end==========' && rm -f *.class",
        "c": "cd \"$dir\" && echo '\n==========code start==========\n' && gcc \"$fileName\" -o \"$fileNameWithoutExt\" && \"$dir$fileNameWithoutExt\" && echo '\n==========code end==========' && rm -f \"$dir$fileNameWithoutExt\"",
        "cpp": "cd \"$dir\" && echo '\n==========code start==========\n' && g++ \"$fileName\" -o \"$fileNameWithoutExt\" && \"$dir$fileNameWithoutExt\" && echo '\n==========code end==========' && rm -f \"$dir$fileNameWithoutExt\"",
        "python": "cd \"$dir\" && echo '\n==========code start==========' && python3 -u \"$fileName\" && echo '==========code end=========='",
        "ruby": "echo '\n==========code start==========\n' && ruby \"$file\" && echo '\n==========code end=========='",
        "go": "echo '\n==========code start==========\n' && go run \"$file\" && echo '\n==========code end=========='"
    }
}